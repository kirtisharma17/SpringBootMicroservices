package com.jnit;


import java.util.List;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class JunitSuperAdvance {
	
	JunitApplication junitApplication;
	
	
	@BeforeEach
	void setupBeforeEach() {
		 junitApplication= new JunitApplication() ;
		System.out.println("@BeforeEach Executeing.....");
		
	}
	
	@DisplayName("Same and Not Same")
	@Test
	void testSameAndNotSame() {
	 
		String str = "luv2code";
	Assertions. assertSame(junitApplication.getAcademy(), junitApplication.getAcademyDuplicate(), "Objects should refer to same object");
	Assertions. assertNotSame(str, junitApplication.getAcademy(), "Objects should not refer to same object");
	}
	
	@DisplayName("True and False")
	@Test
	void testTrueFalse() {
	 int gradeOne = 10;
	 int gradeTwo = 5;
	 Assertions. assertTrue(junitApplication.checkCondition(gradeOne, gradeTwo), "This should return true");
	 Assertions.assertFalse(junitApplication.checkCondition(gradeTwo, gradeOne), "This should return true");

}
	
	@DisplayName("Array Equals")
	@Test
	void testArrayEquals() {
	 String[] stringArray = {"A", "B", "C"};
	 Assertions.assertArrayEquals(stringArray, junitApplication .getFirstThreeLettersOfAlphabet(), "Arrays should be the same");
	}
	
	@DisplayName("Iterable equals")
	@Test
	void testIterableEquals() {
	 List<String> theList = List.of("luv", "2", "code");
	 Assertions.assertIterableEquals(theList, junitApplication.getAcademyInList(), "Expected list should be same as actual list");


}
	
	@DisplayName("Lines match")
	@Test
	void testLinesMatch() {
	 List<String> theList = List.of("luv", "2", "code");
	Assertions. assertLinesMatch(theList, junitApplication.getAcademyInList(), "Lines should match");

	}
	
	@DisplayName("Throws and Does Not Throw")
	@Test
	void testThrowsAndDoesNotThrow() {
		Assertions. assertThrows(Exception.class, () -> { junitApplication.throwException(-1); }, "Should throw exception");
		Assertions.assertDoesNotThrow(() -> { junitApplication.throwException(5); }, "Should not throw exception");
	}
}
	
	
	
	
	



